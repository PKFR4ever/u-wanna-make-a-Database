# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on all branches

on:
  push: 
    branches: 
      - '**' # 对所有分支触发
  pull_request:
    branches: 
      - '**' # 对所有分支的 PR 触发

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install GCC
      run: sudo apt-get update && sudo apt-get install -y gcc g++

    - name: Configure CMake
      # 指定使用 GCC 编译器进行配置
      run: |
        cmake -B ${{github.workspace}}/build \
              -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
              -DCMAKE_C_COMPILER=gcc \
              -DCMAKE_CXX_COMPILER=g++

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      
    - name: Upload build artifacts
      # 将构建产物上传供后续 job 使用
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: build/
      
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        # 下载先前上传的构件
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: build/

      - name: Test
        working-directory: ${{github.workspace}}/build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ./tests
